# Based on Nick Naso's cpp.yml workflow, https://gist.github.com/NickNaso/0d478f1481686d5bcc868cac06620a60

on: 
  push:
  pull_request:
  release:

jobs:
  build_cpp:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Ubuntu_Latest_GCC",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
          }
        - {
            name: "Ubuntu_GCC_9",
            os: ubuntu-latest,
            artifact: "ubuntu_gcc9.7z",
            build_type: "Release",
            cc: "gcc",
            cxx: "g++",
            archiver: "7z a",
          }
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            artifact: "macos_clang.7z",
            build_type: "Release",
            cc: "clang",
            cxx: "clang++",
            archiver: "7za a",
          }
    steps:
      - uses: actions/checkout@v2

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
          echo matrix.config.build_scalapack
          echo ${{ matrix.config.build_scalapack }}

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo apt-get update;
          sudo apt install -y g++ git make libblas-dev liblapack-dev

      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install gcc mpich

      - name: Build Python Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu')
        run: |
          sudo apt install -y python3-dev virtualenv;
          mkdir envs

      - name: Build Python Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install virtualenv

      - name: Create Python virtual environment and install dependencies via pip
        run: |
          virtualenv -p python3 ./envs/py3env;
          source ./envs/py3env/bin/activate;
          pip install numpy scipy opt_einsum
          git clone https://github.com/cyclops-community/tensorbackends.git
          cd tensorbackends
          pip install .
          cd ..

      - name: Install SymTensor
        run:
          source ./envs/py3env/bin/activate;
          pip install .

      - name: Run Tests
        run:
          source ./envs/py3env/bin/activate;
          python ./symtensor/test/test_nonsym.py;
          python ./symtensor/test/test_pbc.py;
          python ./symtensor/test/test_dmrg.py;
          python ./symtensor/test/test_multi_operands.py;

